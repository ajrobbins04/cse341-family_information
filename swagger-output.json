{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Family Information API",
    "description": "This is a family information app created by team d for the CSE341 team project assignment",
    "contact": {
      "name": "CSE 341 Team D",
      "url": "https://github.com/ajrobbins04/cse341-family_information"
    }
  },
  "servers": [
    {
      "url": "https://cse341-family-information-winter-2024.onrender.com/",
      "description": "Render website"
    },
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/individuals/getAllIndividuals": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/individuals/getSingleIndividual/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/individuals/": {
      "post": {
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "example": "any"
                  },
                  "middleName": {
                    "example": "any"
                  },
                  "lastName": {
                    "example": "any"
                  },
                  "birthDate": {
                    "example": "any"
                  },
                  "parents": {
                    "example": "any"
                  },
                  "phone": {
                    "example": "any"
                  },
                  "email": {
                    "example": "any"
                  },
                  "household": {
                    "example": "any"
                  },
                  "headOfHousehold": {
                    "example": "any"
                  },
                  "picture": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/individuals/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "example": "any"
                  },
                  "middleName": {
                    "example": "any"
                  },
                  "lastName": {
                    "example": "any"
                  },
                  "birthDate": {
                    "example": "any"
                  },
                  "parents": {
                    "example": "any"
                  },
                  "phone": {
                    "example": "any"
                  },
                  "email": {
                    "example": "any"
                  },
                  "household": {
                    "example": "any"
                  },
                  "headOfHousehold": {
                    "example": "any"
                  },
                  "picture": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/household/gethouseholds": {
      "get": {
        "tags": [
          "Households"
        ],
        "summary": "Get all Households",
        "description": "This will list all households in the database",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/household/gethousehold/{id}": {
      "get": {
        "tags": [
          "Households"
        ],
        "summary": "Get a single household by its ID",
        "description": "Returns a single household by its id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/household/gethouseholds/{hoh}": {
      "get": {
        "tags": [
          "Households"
        ],
        "summary": "Get a single household by its head of household",
        "description": "Returns a single household by the head of the household",
        "parameters": [
          {
            "name": "hoh",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/household/gethouseholds/{address}": {
      "get": {
        "tags": [
          "Households"
        ],
        "summary": "Get a single household by its address",
        "description": "Returns a single household by its address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/household/createhousehold": {
      "post": {
        "tags": [
          "Households"
        ],
        "summary": "Create a Household",
        "description": "Create a Household by providing all required information.",
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "streetAddress": "123 Applebottom Street",
                "city": "Rexburg",
                "state": "ID",
                "zip": "83440",
                "country": "United States",
                "headOfHousehold": [
                  "",
                  ""
                ],
                "residents": [
                  "",
                  "",
                  ""
                ]
              }
            }
          }
        }
      }
    },
    "/household/updatehousehold/{id}": {
      "put": {
        "tags": [
          "Households"
        ],
        "summary": "Update a Household by its ID",
        "description": "Update an existing household by providing all required information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "streetAddress": "123 Applebottom Street",
                "city": "Rexburg",
                "state": "ID",
                "zip": "83440",
                "country": "United States",
                "headOfHousehold": [
                  "",
                  ""
                ],
                "residents": [
                  "",
                  "",
                  ""
                ]
              }
            }
          }
        }
      }
    },
    "/household/deletehousehold/{id}": {
      "delete": {
        "tags": [
          "Households"
        ],
        "summary": "Delete a household by its ID",
        "description": "Permanently delete a household by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/anniversaries/createanniversary": {
      "post": {
        "tags": [
          "Anniversaries"
        ],
        "summary": "Create an Anniversary",
        "description": "Create an Anniversary by providing all required information.",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "couple": [
                  "individualId1",
                  "individualId2"
                ],
                "anniversaryDate": "2020-06-30"
              }
            }
          }
        }
      }
    },
    "/anniversaries/getall": {
      "get": {
        "tags": [
          "Anniversaries"
        ],
        "summary": "Get all Anniversaries",
        "description": "This will list all anniversaries in the database",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/anniversaries/{individualId}": {
      "get": {
        "tags": [
          "Anniversaries"
        ],
        "summary": "Get a single anniversary by an Individual ID",
        "description": "This will return a single anniversary in the database by an individual",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "individualId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {}
      }
    },
    "/anniversaries/{month}": {
      "get": {
        "tags": [
          "Anniversaries"
        ],
        "summary": "Get anniversaries by month",
        "description": "This will return a list of anniversaries that occur in the specified month",
        "parameters": [
          {
            "name": "month",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {}
      }
    },
    "/anniversaries/updateanniversary/{id}": {
      "put": {
        "tags": [
          "Anniversaries"
        ],
        "summary": "Update an Anniversary by Id",
        "description": "Update an existing anniversary by providing the anniversaryId and the updated information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "couple": [
                  "individualId1",
                  "individualId2"
                ],
                "anniversaryDate": "2020-06-30"
              }
            }
          }
        }
      }
    },
    "/anniversaries/deleteanniversary/{id}": {
      "delete": {
        "tags": [
          "Anniversaries"
        ],
        "summary": "Delete an Anniversary by Id",
        "description": "This will delete a single anniversary from the database by Id. This action is permanent.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/news/createnews": {
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Create a News Story",
        "description": "Create a news story by providing all required information.",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "newsTitle": "News Title",
                "newsBody": "News paragraphs",
                "status": "public",
                "postedBy": "IndividualId",
                "dateCreated": "YYYY-MM-DD",
                "picture": "URL of picture"
              }
            }
          }
        }
      }
    },
    "/news/getall": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get all News Stories",
        "description": "This will return all the news stories in the database",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/news/{id}": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get Single News Story by newsId",
        "description": "This will return a single news story by news Id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/news/author/{postedBy}": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get News by Author",
        "description": "This will return all news stories with postedBy matching the provided individualId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postedBy",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/news/status/{status}": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get News by Status",
        "description": "This will return all news stories with status matching the requested status of ",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/news/updatenews/{id}": {
      "put": {
        "tags": [
          "News"
        ],
        "summary": "Update a News Story by Id",
        "description": "Update an existing news story by providing all required information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "newsTitle": "News Title",
                "newsBody": "News paragraphs",
                "status": "public",
                "postedBy": "IndividualId",
                "dateCreated": "YYYY-MM-DD",
                "picture": "URL of picture"
              }
            }
          }
        }
      }
    },
    "/news/deletenews/{id}": {
      "delete": {
        "tags": [
          "News"
        ],
        "summary": "Delete a News Story by Id",
        "description": "This will delete a single news story from the database by Id. This action is permanent.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/birthdays/getAll": {
      "get": {
        "tags": [
          "Birthdays"
        ],
        "summary": "Get all birthdays",
        "description": "This will return the full names and birth dates of all individuals in the database sorted by birth month along with their date of birth and the age of the individual as of today",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/birthdays/{month}": {
      "get": {
        "tags": [
          "Birthdays"
        ],
        "summary": "Get birthdays by month",
        "description": "This will return the full names and birth dates of all individuals in the database born in the specified month along with their date of birth and the age of the individual as of today",
        "parameters": [
          {
            "name": "month",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    }
  }
}